@using Kushl_3m3bdo.Models.Consts
@model ShoppingCartsViewModel

@{
	ViewData["Title"] = "Index";
}

<form method="post">
	<br />
	<div class="card shadow border-0">
		<div class="card-header bg-secondary bg-gradient text-light ml-0 py-4">
			<div class="row px-4">
				<div class="col-6">
					<h5 class="pt-2 text-white">
						Shopping Cart
					</h5>
				</div>

			</div>
		</div>
		<div class="card-body my-4">
			
			<div class="col-md-2">
				<a asp-controller="Products" asp-action="Index" role="button" class="btn text-white btn-sm mb-4 ms-4" data-mdb-ripple-init style="background-color: #0082ca;">
					<i class="bi bi-backspace"></i>
					<small>Back</small>
				</a>
			</div>

			<div class="row mb-3 pb-3">

				<div class="col-md-10 offset-md-1">

					@foreach (var item in Model.ShoppingCartList)
					{
						<div class="row border-bottom pb-3 align-content-center align-items-center justify-content-center">

							<div class="d-none d-lg-block col-lg-1 text-center py-2">
								@{
									var imgSrc = item.Product.ProductImg != null
										? $"data:image/*;base64,{Convert.ToBase64String(item.Product.ProductImg)}"
										: Url.Content("~/images/Default_img.png");
								}

								<img src="@imgSrc" class="rounded" width="100%"/>
							</div>

							<div class="col-12 col-lg-6 pt-md-3">
								<h5 class="text-uppercase text-secondary"><strong>@item.Product.Description</strong></h5>
								<p><small>@Html.Raw(item.Product.Description)</small></p>
							</div>
							<div class="col-12  col-lg-5 text-center row">

								<div class="col-4 text-md-right pt-2 pt-md-4">
									<h6 class="fw-semibold">
										@item.Price.ToString("c")
										<span class="text-muted">&nbsp;x&nbsp;</span>@item.Quantity
									</h6>
								</div>

								<div class="col-5 col-sm-4 col-lg-6 pt-2">
									<div class="w-75 btn-group" role="group">
										<a asp-action="Plus" asp-route-cartId="@item.Id" class="btn btn-outline-primary bg-gradient py-2">
											<i class="bi bi-plus-square"></i>
										</a> &nbsp;
										<a asp-action="Minus" asp-route-cartId="@item.Id" class="btn btn-outline-primary bg-gradient py-2">
											<i class="bi bi-dash-square"></i>
										</a>
									</div>
								</div>

								<div class="col-3 col-sm-4 col-lg-2 text-right pt-2">
									<a asp-action="remove" asp-route-cartId="@item.Id" class="btn btn-danger bg-gradient py-2 ">
										<i class="bi bi-trash-fill"></i>
									</a>
								</div>

							</div>

						</div>
					}

				</div>
			</div>

			<div class="card-footer bg-white border-0">
				<div class="row">
					<div class="col-md-4 offset-md-4">
						<ul class="list-group mb-4">
							<li class="d-flex justify-content-between align-items-center">
								<h5 class="text-dark fw-semibold text-uppercase"> Total (USD)</h5>
								<h4 class="text-dark fw-bolder">@Model.OrderHeader.OrderTotal.ToString("c")</h4>
							</li>
						</ul>
					</div>
				</div>
				<div class="row">
					<div class="col-md-2 offset-md-5">
						@if (Model.ShoppingCartList.Any() && !Model.ShoppingCartList.Equals(null))
						{
							@if (User.IsInRole(Roles.Role_Manager) || User.IsInRole(Roles.Role_Admin))
							{
								<button id="ConfirmButton" type="button" class="btn btn-success border-0 bg-gradient w-100 py-2">Continue to Checkout</button>
							}
							else
							{
								<button type="button" onclick="window.location.href = '@Url.Action("Summary", "Carts")'" class="btn btn-success border-0 bg-gradient w-100 py-2">Continue to Checkout</button>
							}
						}
						@* <a asp-action="Summary" class="btn btn-primary border-0 bg-gradient w-100 py-2">Summary</a> *@
					</div>
				</div>
				@if (TempData["WalletError"] != null)
				{
					<br/>
					<div class="text-danger text-center">@TempData["WalletError"]</div>
				}
			</div>

		</div>
	</div>
</form>

@section Scripts
{
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script>
		document.getElementById("ConfirmButton").addEventListener("click", function (event) {
			// Prevent default form submission (if necessary)
			event.preventDefault();

			// Show the SweetAlert2 dialog with two choices
			Swal.fire({
				icon: "question",
				title: "Order Type...",
				text: "You won't be able to revert this!",
				showDenyButton: true,
				showCancelButton: true,
				confirmButtonText: "Administration Order",
				confirmButtonColor: "#3085d6",
				denyButtonText: `My Order`,
				denyButtonColor: "#d33"
			}).then((result) => {
				// Based on user choice, redirect to the correct action
				if (result.isConfirmed) {
					// Redirect to the PickUser action for administration orders
					window.location.href = '@Url.Action("PickUser", "Carts")';
				} else if (result.isDenied) {
					// Redirect to the Summary action for the current user's order
					window.location.href = '@Url.Action("Summary", "Carts")';
				}
			});
		});
	</script>
}
