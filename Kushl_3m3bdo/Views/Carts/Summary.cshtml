@model ShoppingCartsViewModel

<form id="orderForm" method="post">
	<br />
	<div class="container">
		<div class="card shadow border-0">

			<div class="card-header bg-secondary bg-gradient text-light ml-0 py-4">
				<div class="row px-4">
					<div class="col-6">
						<h5 class="pt-2 text-white">
							Order Details
						</h5>
					</div>
					<div class="col-6 text-end">
						<a asp-action="Index" class="btn btn-danger btn-sm">
							<i class="bi bi-backspace-fill"></i>
							Back to Cart
						</a>
					</div>
				</div>
			</div>
			<div class="card-body">
				<div class="container rounded p-2">
					<div class="row">
						<div class="col-12 col-lg-6 pb-4">
							<div class="row">
								<h4 class="d-flex justify-content-between align-items-center mb-3">
									<span class="text-info">Shipping Details:</span>
								</h4>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Name</label>
								</div>
								<div class="col-9">
									<input asp-for="@Model.OrderHeader.Name" class="form-control" />
									<span asp-validation-for="@Model.OrderHeader.Name" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Phone</label>
								</div>
								<div class="col-9">
									<input asp-for="@Model.OrderHeader.PhoneNumber" class="form-control" />
									<span asp-validation-for="@Model.OrderHeader.PhoneNumber" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Street Address</label>
								</div>
								<div class="col-9">
									<input asp-for="@Model.OrderHeader.StreetAddress" class="form-control" />
									<span asp-validation-for="@Model.OrderHeader.StreetAddress" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>City</label>
								</div>
								<div class="col-9">
									<input asp-for="@Model.OrderHeader.City" class="form-control" />
									<span asp-validation-for="@Model.OrderHeader.City" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>State</label>
								</div>
								<div class="col-9">
									<input asp-for="@Model.OrderHeader.State" class="form-control" />
									<span asp-validation-for="@Model.OrderHeader.State" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Postal Code</label>
								</div>
								<div class="col-9">
									<input asp-for="@Model.OrderHeader.ZipCode" class="form-control" />
									<span asp-validation-for="@Model.OrderHeader.ZipCode" class="text-danger"></span>
								</div>
							</div>
						</div>
						<div class="col-12 col-lg-5 offset-lg-1">
							<h4 class="d-flex justify-content-between align-items-center mb-3">
								<span class="text-info">Order Summary:</span>
							</h4>
							<ul class="list-group mb-3">
								@foreach (var item in Model.ShoppingCartList)
								{
									<li class="list-group-item d-flex justify-content-between">
										<div>
											<h6 class="my-0">@item.Product.Name</h6>
											<small class="text-muted">Quantity: @item.Quantity</small>
										</div>
										<span class="text-muted">@((item.Price * item.Quantity).ToString("c")) </span>
									</li>
								}



								<li class="list-group-item d-flex justify-content-between bg-light">
									<small class="text-info">Total (USD)</small>
									<strong class="text-info">@Model.OrderHeader.OrderTotal.ToString("c")</strong>
								</li>
							</ul>
						</div>
					</div>
				</div>
			</div>
			<div class="card-footer">
				<div class="row">
					<div class="col-12 col-md-8 pt-2">
						<p style="color:maroon; font-size:14px;">
							Estimate Arrival Date:
							@DateTime.Now.AddHours(2) - @DateTime.Now.AddHours(72)
						</p>
					</div>
					<div class="col-12 col-md-4">
						<button id="ChooseOrderType" type="button" value="Place Order" class="btn btn-primary form-control">Place Order</button>
					</div>
				</div>
			</div>
		</div>
	</div>
</form>

@section Scripts
{
	<partial name="_ValidationScriptsPartial"/>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script>

		document.getElementById("ChooseOrderType").addEventListener("click",
			function(event) {
				// Prevent default form submission (if necessary)
				event.preventDefault();

				// Show the SweetAlert2 dialog with two choices
				Swal.fire({
					icon: "question",
					title: "Order Type...",
					text: "You won't be able to revert this!",
					showCloseButton: true,
					showDenyButton: true,
					focusConfirm: false,
					confirmButtonText: `<i class="bi bi-truck"></i> Delivery`,
					confirmButtonColor: "#3085d6",
					denyButtonText: `<i class="bi bi-bag-check"></i> PickUp`,
					denyButtonColor: "#d33"
				}).then((result) => {
					if (result.isConfirmed || result.dismiss === Swal.DismissReason.deny) {
						// Based on user choice, redirect to the correct action
						// Based on user choice, submit the form with POST request
						let isDelivery = result.isConfirmed;

						// // Create a dynamic form
						// let form = document.createElement('form');
						// form.method = 'POST';
						// form.action = '@Url.Action("Summary", "Carts")';

						// Add a hidden input to the existing form to store isDelivery
						let form = document.getElementById("orderForm");

						// Add hidden input for `isDelivery` value
						let input = document.createElement('input');
						input.type = 'hidden';
						input.name = 'isDelivery';
						input.value = isDelivery;

						form.appendChild(input);

						// Append form to body and submit it
						document.body.appendChild(form);
						form.submit();
					}
				});
			});

	</script>
}
