@using Kushk_3m3bdo.Models.Consts
@model ShoppingCart

@{
	ViewData["Title"] = "Details";
}

<h1>Product Details</h1>

<form method="post" enctype="multipart/form-data">

	<div class="card shadow border-0 mt-4">

		<div class="card-header bg-secondary bg-gradient text-light py-4">
			<div class="row">
				<div class="col-12 text-center">
					<h3 class="text-white text-uppercase">@Model.Product.Name</h3>
					<p class="text-white-50 fw-semibold mb-0">Added By: @User.Identity.Name</p>
				</div>
			</div>
		</div>

		<div class="card-body">
			<div class="py-3">

				<div class="row">

					<div class="col-12 col-lg-3 offset-lg-1 text-center mb-3">

						@{
							string ProductimageSrc = @Model.Product.ProductImg != null
							? $"data:image/*;base64,{Convert.ToBase64String(@Model.Product.ProductImg)}"
							: Url.Content("~/images/Default_img.png");
						}
						<img id="ProfilePicture" alt="profile" src=@ProductimageSrc width="100%" class="rounded img-fluid catlogo card-img" />

					</div>

					<div class="col-12 col-lg-6 offset-lg-1">

						<div class="col-12 col-md-6 pb-4">
							<h6 class="text-dark text-opacity-50 ">
								<b>Category:</b>
								<span class="halftab">@Model.Product.Category.Name.ToUpper()</span>
							</h6>
						</div>

						<div class="row ps-2">
							<h6 class="text-dark text-opacity-50 ">
								<b>UPC:</b>
								<span class="halftab">@Model.Product.UPCNumber</span>
							</h6>
						</div>

						<div class="row ps-2">
							<h6 class="text-dark text-opacity-50">
								<b>Stock Price:</b>
								<span class="halftab">@Model.Product.Price</span>
							</h6>
						</div>
						
						@if (User.IsInRole(Roles.Role_Manager) || User.IsInRole(Roles.Role_Admin))
						{
							<div class="row ps-2">
								<h6 class="text-dark text-opacity-50">
									<b>Stock Number:</b>
									<span class="halftab">@Model.Product.Stock</span>
								</h6>
							</div>
						}

						<div class="row ps-2">
							<h6 class="text-dark text-opacity-50">
								<b>Company:</b>
								<span class="halftab">@Model.Product.Company</span>
							</h6>
						</div>

						<div class="row ps-2">
							<h6 class="text-dark text-opacity-50 pb-2">
								<b>Country:</b>
								<span class="halftab">@Model.Product.Country</span>
							</h6>
						</div>

						<div class="row text-center ps-2">
							<div class="p-1 col-3 col-lg-2 bg-white border-bottom">
								<div class="text-dark text-opacity-50 fw-semibold"><b>Price</b></div>
							</div>
							<div class="p-1 col-3 col-lg-2 bg-white border-bottom">
								<div class="text-dark text-opacity-50 fw-semibold"><b>Discount</b></div>
							</div>
							<div class="p-1 col-3 col-lg-2 bg-white border-bottom">
								<div class="text-dark text-opacity-50 fw-semibold"><b>Price Now</b></div>
							</div>
						</div>

						<div class="row text-center ps-2">
							<div class="p-1 col-3 col-lg-2 bg-white text-warning fw-bold">
								<div>@(Model.Product.Price.ToString("C2"))</div>
							</div>
							<div class="p-1 col-3 col-lg-2 bg-white text-warning fw-bold">
								<div>@Model.Product.Discount %</div>
							</div>
							<div class="p-1 col-3 col-lg-2 bg-white text-warning fw-bold">
								<div>@((Model.Product.Price * (decimal)(1 - Model.Product.Discount / 100)).ToString("C2"))</div>
							</div>
						</div>

						<div class="row pl-2 my-3">
							<h6 class="text-dark text-opacity-50"><b> Description: </b></h6>
							<br />
							<span class="tab">
								<p class="text-secondary lh-sm"> @Html.Raw(@Model.Product.Description)</p>
							</span>
						</div>

						<span asp-validation-for="Quantity" class="text-danger"></span>

						<div class="row pl-2 mb-3 mt-1">
							<div class="col-md-4">
								<div class="input-group mb-3">
									<span class="input-group-text bg-primary text-white border-0 fw-semibold"
									      id="inputGroup-sizing-default">
										Quantity
									</span>
									<input asp-for="@Model.Quantity" type="number" value="1" class="form-control text-end"
									       aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default"
										   id="productQuantity" />
								</div>
							</div>
						</div>

						<div class="row">
							<div class="col-12 col-md-6 pb-1">
								<input asp-for="@Model.ProductId" hidden/>
								<button type="submit"
								        class="btn btn-primary bg-gradient  w-100 py-2 text-uppercase fw-semibold"
								        onclick="return validateStock()">
									Add to Cart
								</button>
							</div>
							@if (TempData["ProductError"]!=null)
							{
								<div class="text-danger">
									@TempData["ProductError"]
								</div>
							}
						</div>

					</div>

				</div>
			</div>
		</div>

		<div class="card-footer">
			@* <button type="submit" class="btn btn-primary">Save</button> *@

			<a asp-action="Index" class="btn btn-secondary">Back To Home</a>
			@if (User.Identity.IsAuthenticated)
			{
				<a asp-controller="Products" asp-action="Update" asp-route-productId="@Model.ProductId" class="btn btn-warning">Edit Product</a>
				@if (!Model.Product.IsDeleted)
				{
					<a asp-controller="Products" asp-action="Remove" asp-route-productId="@Model.ProductId" class="btn btn-danger float-end deleteProduct" data-path="@Url.Action("Remove", "Products", new { productId = @Model.ProductId })">Delete Product</a>
				}
				else
				{
					<a id="backProduct" type="button" class="btn btn-success float-end">Back This Product</a>
				}
			}
		</div>

	</div>
</form>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				Are you sure you want to delete this Product?
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger" id="btnContinueToDelete">Delete</button>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

	<partial name="_ValidationScriptsPartial" />
	<script>
		function validateStock() {
			if (@Model.Product.Stock == 0) {
				Swal.fire({
					icon: 'warning',
					showCloseButton: true,
					title: 'Oops... \n Out Of Stock',
					text: 'This Product Will Coming Soon!',
				});
				return false;
			}
			else if (@Model.Product.Stock < document.getElementById("productQuantity").value) {
				Swal.fire({
					icon: 'warning',
					showCloseButton: true,
					title: "Oops... \n We Can't Offer This Quantity For Now",
					text: 'Work began at once to restock This Product',
				});
				return false;
			}
			return true;
		}
	</script>
	<script type="text/javascript">
		var pathToDelete;

		$(document).on("click", ".deleteProduct", function (e) {
			e.preventDefault();
			pathToDelete = $(this).data('path');
			$(".modal").modal('show');
		});

		// Handle delete confirmation button
		$("#btnContinueToDelete").click(function () {
			window.location.href = pathToDelete; // Redirect to the delete URL
		});

	</script>
	<script>
		document.getElementById("backProduct").addEventListener("click", function (event) {
			// Prevent default form submission (if necessary)
			event.preventDefault();

			// Show the SweetAlert2 dialog with two choices
			Swal.fire({
				icon: "question",
				title: "Product Status...",
				text: "You can be able to revert this!",
				showCloseButton: true,
				showCancelButton: true,
				confirmButtonText: "ReBack This Product",
				confirmButtonColor: "#3085d6",
			}).then((result) => {
				// Based on user choice, redirect to the correct action
				if (result.isConfirmed) {
					Swal.fire({
						title: "Product is Back!",
						text: "Your Product Now Available Again!.",
						icon: "success",
					});
					
					// Delay the redirection by 1.5 seconds (1500 milliseconds)
					setTimeout(() => {
						// Redirect to the PickUser action for administration orders
						window.location.href = '@Url.Action("ReBack", "Products", new { productId = @Model.ProductId })';
					}, 1500);
				}
			});
		});
	</script>
}

